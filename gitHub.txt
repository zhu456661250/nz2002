去 GitHub 官网去下载 安装 点击右键可以看看有没有安装成功

第一次使用 Git要在电脑 cmd 中先进行一些操作 不是在 git cmd里面

        git config --list 检查git全局配置 执行之后显示的是 系统默认配置的内容
        用户名设定： git config --global user.name "用户名字"  用户名必须是纯英文 不能是汉字  --global 不能简写
        用户邮箱： git config --global user.email "电子邮箱"

git 的使用方法 和 工作原理
    
    1. 设定一个需要 git 软件来管理的项目文件夹

    2. 在这个文件目录中鼠标右键 使用 git Bash Here 来运行 git程序 也可以使用 cmd 来运行 但是要是项目的文件夹路径   苹果的操作系统没有 git 运行环境只能在 cmd 里面运行

    3. 初始化当前文件夹  git init   初始化之后会在项目文件夹下生成一个隐藏文件 .git 这个文件储存的是 git 的配置信息 非常重要不能删  这个初始化的目的是将当前的文件夹按照 git 进行分区

    4. 初始化之后会将项目文件进行分区 分为工作区  缓存区  历史区
            1.工作区是 能看到的也可以编辑的文件
            2. 缓存区是将工作区中编辑好的文件上传到缓存区临时存储
            3.历史区 是将缓存的文件生成历史版本  之后会上传到 GitHub远程仓库里面

执行过程 
        上传：  是 从工作区  到 缓存  到  历史区  最后上传到 GitHub 
        回滚下载： 其他区都会返回到 工作区是


具体执行命令
    1. 初始化命令            git init
    2. 查看缓存的内容         git status
    3. 上传文件到缓存区           git add 文件名
    3. 上传文件夹到缓存区           git add 文件夹名
    3. 上传所有文件夹到缓存区           git add . / 或者是 git add --all
    4. 将缓存区的文件恢复到工作区        git checkout
    5.查看工作区和缓存区的版本区别       git diff
    4. 将当前缓存区的内容全部生成历史版本      git commit -m "注释内容"
    5. git log          查看历史版本  会出来当前历史版本的 id 值    commit 后面的一大串的数值就是他的 id值
    6.  git reset HEAD -- 文件名/文件夹名/.       将缓存的文件撤销回滚到工作区
    7. git reset -- hard   历史版本的id值              切换历史版本    历史版本一旦生成就无法删除
     
    git add 是添加的不是文件 而是文件的内容节点  当文件内容发生改变时才会有新的添加状态出现  

    例如我们将所有的文件上传至缓存区等于是在缓存区储存当前文件内容的节点 此时将当前的缓存区的所有内容储存为历史版本 但是我们做 git add . 是将所有的文件再次储存到缓存区  如果里面的内容不改变是不会执行储存到缓存区的  改变了才会储存到缓存区

    缓存区储存的文件是不能修改的  如果被修改了需要重新上传
    clear 是清屏命令



上传到 GitHub 的储存库
    1.先配置信息  在仓库选择 https 路径  在git配置文件中添加配置信息    git remote add origin https路径
    2.上传操作              git push -u origin master
    3.下载 克隆仓库         git clone 仓库地址


git项目的分支设定
    1. git branch 分支名称
    2. git checkout 分支名称
    3. git merge 分支名称
    在不同分分支生成不同的历史版本 如果切换回影响页面的内容显示  每个分支 都要独立创建不同的历史版本
    只能把别的分支合并到自己身上  不能把自己的合并到别人身上
    所有的分支最终都会合并到 master主分支上 

删除GitHub 在设置里面 拉倒第 红色的 删除按钮就出来了 然后复制地址删除库 复制地址的时候会有两个空格 把这两个空格去掉 点击删除按钮才能点击   